"""
Django settings for Zerodose project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import environ  # ⇐ 추가

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# ==============================================================================
# django-environ 설정 시작 (추가된 부분)
# ==============================================================================
env = environ.Env(
    # 기본값 및 타입 캐스팅 설정
    DEBUG=(bool, False)
)

# .env 파일의 경로를 지정하고 읽어들임
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
# ==============================================================================
# django-environ 설정 끝 (추가된 부분)
# ==============================================================================


# --- 여기가 핵심 ---
# .env 파일에서 GOOGLE_APPLICATION_CREDENTIALS 변수 값을 읽어서,
# Django 애플리케이션이 실행되는 동안 사용할 환경 변수로 설정합니다.
# 이렇게 하면 시스템 전체에 환경 변수를 설정할 필요가 없습니다.
if 'GOOGLE_APPLICATION_CREDENTIALS' in os.environ:
    pass # 시스템 환경변수가 있다면 그대로 사용
elif env('GOOGLE_APPLICATION_CREDENTIALS', default=None):
    # .env 파일에서 읽은 값을 시스템 환경변수처럼 설정
    os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = env('GOOGLE_APPLICATION_CREDENTIALS')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g*@$y+6yrq7o1_x=mcgs8%i5(i*)&b9c2and5dk79@myro$=kv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'quiz',
    'storages',
    'rest_framework',
    'corsheaders',
    'data',
    'item',
]

# --- AWS S3 설정 (파일 하단에 추가) ---
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 'iccas-quiz' # 1단계에서 만든 버킷 이름
AWS_S3_REGION_NAME = 'ap-northeast-2' # 버킷 리전
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_DEFAULT_ACL = 'public-read' # 파일 업로드 시 기본 권한
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' # 기본 저장소를 S3로 변경

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # ⇐ 최상단에 추가
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Zerodose.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Zerodose.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'zerodose',       # MySQL에 실제 존재하는 DB명
        'USER': 'zerouser',        # MySQL 사용자명
        'PASSWORD': '1234!',       # MySQL 비밀번호
        'HOST': 'localhost',       # MySQL 서버 주소 (로컬이라면 localhost)
        'PORT': '3306',            # MySQL 포트 (기본 3306)
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
        },
    }
}






# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True
